{
	"components": {
		"definitions": [
			{
				"define": "$is_path(../gm1:health_over_time)",
				"foreach_index": false,
				"vars": {
					"healthPerHeal": "1",
					"timeBetweenHeal": "1"
				},
				"modify": [
					{
						"path": "$module_path(1)",
						"method": "replace",
						"values": [
							{
								"key": "minecraft:damage_over_time",
								"template": {
									"damagePerHurt": "(- + $var(healthPerHeal))",
									"timeBetweenHurt": "$var(timeBetweenHeal)"
								}
							}
						]
					}
				]
			},
			{
				"define": "$is_path(../gm1:invulnerable)",
				"foreach_index": false, 
				"modify": [
					{
						"path": "$module_path(1)",
						"method": "replace",
						"values": [
							{
								"key": "minecraft:damage_sensor",
								"template": {
									"cause": "any",
									"deals_damage": "false"
								}
							}
						]
					}
				]
			},
			{
				"define": "$is_path(../gm1:invisible)",
				"foreach_index": false, 
				"modify": [
					{
						"path": "$module_path(1)",
						"method": "replace",
						"values": [
							{
								"key": "minecraft:scale",
								"template": {
									"value": "0.0"
								}
							}
						]
					}
				]
			},
			{
				"define": "$is_path(../gm1:visible)",
				"foreach_index": false, 
				"modify": [
					{
						"path": "$module_path(1)",
						"method": "replace",
						"values": [
							{
								"key": "minecraft:scale",
								"template": {
									"value": "1.0"
								}
							}
						]
					}
				]
			},
			{
				"define": "$is_path(../gm1:silent_kill)",
				"foreach_index": false, 
				"vars": {
					"kill_time": "0"
				},
				"modify": [
					{
						"path": "$module_path(1)",
						"method": "replace",
						"values": [
							{
								"key": "minecraft:explode",
								"template": {
									"power": "0",
									"fuseLit": "true",
									"fuseLength": "$var(kill_time)"
								}
							}
						]
					}
				]
			},
			{
				"define": "$is_path(../gm1:loot_kill)",
				"foreach_index": false, 
				"modify": [
					{
						"path": "$module_path(1)",
						"method": "replace",
						"values": [
							{
								"key": "minecraft:health",
								"template": {
									"value": "-1"
								}
							},
							{
								"key": "minecraft:scale",
								"template": {
									"value": "0"
								}
							}
						]
					}
				]
			},
			{
				"define": "$is_path(../gm1:spawn_items)",
				"foreach_index": false,
				"vars": {
					"time": "0"
				},
				"modify": [
					{
						"path": "$module_path(1)",
						"method": "replace",
						"values": [
							{
								"key": "minecraft:ageable",
								"template": {
									"duration": "$var(time)",
									"drop_items": "$var(items)",
									"grow_up": {
										"event": "$var(event)",
										"target": "self"
									}
								}
							}
						]
					}
				]
			},
			{
				"define": "$is_path(../gm1:timer2)",
				"foreach_index": false, 
				"vars": {
					"time": "0.0"
				},
				"modify": [
					{
						"path": "$module_path(1)",
						"method": "replace",
						"values": [
							{
								"key": "minecraft:ageable",
								"template": {
									"duration": "$var(time)",
									"grow_up": {
										"event": "$var(event)",
										"target": "self"
									}
								}
							}
						]
					}
				]
			},
			{
				"define": "$is_path(../gm1:is_marker)",
				"foreach_index": false, 
				"modify": [
					{
						"path": "$module_path(1)",
						"method": "replace",
						"values": [
							{
								"key": "minecraft:damage_sensor",
								"template": {
									"cause": "any",
									"deals_damage": "false"
								}
							},
							{
								"key": "minecraft:scale",
								"template": {
									"value": "0"
								}
							}
						]
					}
				]
			},
			{
				"define": "$is_path(../gm1:item_sensor)",
				"foreach_index": true,
				"vars": {
					"@group_name": "(holds_ + $var(item) + _in_ + $var(domain))",
					"domain": "hand"
				},
				"modify": [
					{
						"path": "minecraft:entity/component_groups/gm1:default_items",
						"method": "replace",
						"values": [
							{
								"key": "combine",
								"template": "$var(default)"
							}
						]
					},
					{
						"path": "minecraft:entity/component_groups",
						"method": "replace",
						"values": [
							{
								"key": "(gm1: + $var(group_name))",
								"template": "$var(components)"
							}
						]
					},
					{
						"path": "$module_path(1) + /minecraft:environment_sensor",
						"method": "replace",
						"values": [
							{
								"key": "list-unshift",
								"template": {
									"on_environment": {
										"filters": { "test": "has_equipment", "operator": "not", "domain": "$var(domain)", "value": "$var(item)" },
										"event":  "(gm1:reset_ + $var(group_name))"
									}
								}
							},
							{
								"key": "list",
								"template": {
									"on_environment": {
										"filters": { "test": "has_equipment", "domain": "$var(domain)", "value": "$var(item)" },
										"event":  "(gm1:on_ + $var(group_name))"
									}
								}
							}
						]
					},
					{
						"path": "minecraft:entity/events/gm1:reset_ + $var(group_name) + /remove/component_groups",
						"method": "replace",
						"values": [
							{
								"key": "list",
								"template": "(gm1: + $var(group_name))"
							}
						]
					},
					{
						"path": "minecraft:entity/events/gm1:reset_ + $var(group_name) + /add/component_groups",
						"method": "replace",
						"values": [
							{
								"key": "list",
								"template": "gm1:default_items"
							}
						]
					},
					{
						"path": "minecraft:entity/events/gm1:on_ + $var(group_name) + /add/component_groups",
						"method": "replace",
						"values": [
							{
								"key": "list",
								"template": "(gm1: + $var(group_name))"
							}
						]
					}
				]
			}
		],
		"descriptions": {
			"gm1:health_over_time": {
				"healthPerHeal": {
					"type": "Integer",
					"default_value": "1",
					"description": "Amount of health to heal"
				},
				"timeBetweenHeal": {
					"type": "Integer",
					"default_value": "1",
					"description": "Time in seconds between health"
				},
				"__des__": "Applies defined amount of health to the entity at specified intervals. Uses minecraft:damage_over_time internally"
			},
			"gm1:invulnerable": {
				"__des__": "Sets that this entity is invulnerable. Uses minecraft:damage_sensor internally"
			},
			"gm1:invisible": {
				"__des__": "Sets that this entity is invisible. Uses minecraft:scale internally"
			},
			"gm1:is_marker": {
				"__des__": "Sets that this entity is a marker entity. Uses minecraft:scale & minecraft:damage_sensor internally"
			},
			"gm1:item_sensor": {
				"item": {
					"type": "String",
					"default_value": "",
					"description": "The item to react to"
				},
				"domain": {
					"type": "String",
					"default_value": "hand",
					"description": "Where the item has to be in order to add the components defined. (any, armor, hand, feet, leg, torso, head)"
				},
				"components": {
					"type": "JSON Object",
					"default_value": "",
					"description": "Components to add upon holding this item"
				},
				"default": {
					"type": "JSON Object",
					"default_value": "",
					"description": "All components of 'components' but with default values"
				},
				"__do_not_use__": true,
				"__des__": "Give items special behavior with this component. Uses minecraft:environment_sensor internally"
			},
			"gm1:loot_kill": {
				"__des__": "This component kills the entity once you add it. Uses minecraft:health & minecraft:scale internally"
			},
			"gm1:silent_kill": {
				"time": {
					"type": "Integer",
					"default_value": "0",
					"description": "Time it takes until the entity gets killed"
				},
				"__des__": "This component kills the entity without playing sounds, displaying particles or dropping loot once you add it. Uses minecraft:explode internally"
			},
			"gm1:spawn_items": {
				"time": {
					"type": "Decimal",
					"default_value": "0",
					"description": "Time it takes until the defined items spawn"
				},
				"items": {
					"type": "List",
					"default_value": "",
					"description": "List of items to spawn"
				},
				"event": {
					"type": "String",
					"default_value": "",
					"description": "Event to call once the items are spawned"
				},
				"__des__": "Spawns multiple items after the specified amount of time. Uses minecraft:ageable internally"
			},
			"gm1:timer2": {
				"time": {
					"type": "Decimal",
					"default_value": "0.0",
					"description": "Time until the event fires"
				},
				"event": {
					"type": "String",
					"default_value": "",
					"description": "Event to call once the time runs out"
				},
				"__des__": "A timer which can run parallel to minecraft:timer. Uses minecraft:ageable internally"
			},
			"gm1:visible": {
				"__des__": "Sets that this entity is visible. Uses minecraft:scale internally"
			}
		}
	},
	"other": {
		"modules": [

		],
		"auto_completions": [
			//GM1:ITEM_SENSOR
			{
				"recognize": "$is(gm1:item_sensor)",
				"method": "append",
				"propose": [
					{
						"function": "$next_list_index",
						"type": "object"
					}
				]
			},
			{
				"recognize": "$is_path(../gm1:item_sensor/.)",
				"method": "append",
				"propose": [
					{
						"key": "item",
						"type": "object"
					},
					{
						"key": "domain",
						"type": "object"
					},
					{
						"key": "components",
						"type": "object"
					},
					{
						"key": "default",
						"type": "object"
					}
				]
			},
			{
				"recognize": "$is_path(../gm1:item_sensor/./item)",
				"method": "replace",
				"propose": [
					{
						"function": "$parse_documentation(items, string)"
					},
					{
						"function": "$parse_documentation(blocks, string)"
					}
				]
			},
			{
				"recognize": "$is_path(../gm1:item_sensor/./domain)",
				"method": "replace",
				"propose": [
					{
						"key": "hand",
						"type": "string"
					},
					{
						"key": "any",
						"type": "string"
					},
					{
						"key": "armor",
						"type": "string"
					},
					{
						"key": "feet",
						"type": "string"
					},
					{
						"key": "leg",
						"type": "string"
					},
					{
						"key": "torso",
						"type": "string"
					},
					{
						"key": "head",
						"type": "string"
					}
				]
			}
		]
	}
}